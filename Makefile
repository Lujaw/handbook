# Makefile originally from the 'Mastering Node' book written TJ Holowaychuk
# https://github.com/visionmedia/masteringnode
#

# used with pdf generator tool. TODO: Replace with pandoc.
PDF_FLAGS = --fontsize 9.0 \
		--linkstyle plain \
		--linkcolor blue \
		--embedfonts \
		--footer "c 1" \
		--no-toc

# Pages that make up the full text (in markdown)
MD = pages/title.md \
  chapters/toc.md \
  chapters/introduction.md \
  chapters/hello_world.md \
  chapters/platform_features.md \
  chapters/jitsu.md \
  chapters/web_admin.md \
  chapters/json_api.md \
  chapters/haibu.md \
  chapters/open_source_projects.md \
  chapters/faq.md \
  chapters/support.md \
  appendices/toc.md \
  appendices/package.json.md \
  appendices/resources.md \
  appendices/building_the_handbook.md

# An abridged version of the handbook
README = pages/title.md \
  chapters/toc.readme.md \
  chapters/introduction.md \
  chapters/hello_world.md \
  chapters/platform_features.md \
  chapters/jitsu.md \
  chapters/web_admin.md \
  chapters/json_api.md \
  chapters/haibu.md \
  chapters/open_source_projects.md \
  chapters/faq.md \
  chapters/support.md

# Just the API docs
API = chapters/json_api.md 

# HTML files (generated by ronn)
HTML = $(MD:.md=.html)

# We use make with sed to implement microtemplating so that we may
# use multiple folders/sources for images as needed.
# SEE: book.md ReadMe.md API.md %.html
GITHUB_FIG = https://raw.github.com/nodejitsu/handbook/master/fig
LOCAL_FIG = fig

all: book.html book.pdf book.md ReadMe.md API.md website clear

book.md:
	@echo "\n... generating $@"
	cat $(MD) \
	  | sed "s {{fig}} $(GITHUB_FIG) " \
	  > book.md

ReadMe.md:
	@echo "\n... generating $@"
	cat $(README) \
	  | sed "s {{fig}} $(GITHUB_FIG) " \
	  > ReadMe.md

API.md:
	@echo "\n... generating $@"
	cat $(API) \
	  | sed "s {{fig}} $(GITHUB_FIG) " \
	  > API.md

book.html: pages/head.html pages/tail.html book.md
	@echo "\n... generating $@"
	echo `cat pages/head.html` \
	  `cat pandoc -t html book.md` \
	  `cat pages/tail.html` \
	> book.html

# TODO: Use pandoc and latex instead of htmldoc
book.pdf:
	@echo "\n... generating $@"
	cat $(MD) \
	  | sed "s {{fig}} $(LOCAL_FIG) " \
	  | pandoc -f markdown -o book.pdf

# .mobi version
book.mobi:
	@echo "\n... generating $@"
	ebook-convert book.html book.mobi --output-profile kindle

# .epub version
book.epub:
	@echo "\n... generating $@"
	ebook-convert book.html book.epub \
		--title "Nodejitsu Handbook" \
		--no-default-epub-cover \
		--authors "Marak Squires, Joshua Holbrook" \
		--language en \
		--cover pages/cover.jpg

# Assemble our "website" bundle (move things into public folder, etc.)
website: book.html public
	@echo "\n... copying items into ./public"
	cp book.html public/index.html
	cp book.pdf public/book.pdf
	cp -r fig public/fig

public:
	mkdir public

# Regenerate handbook, commit
regenerate: clean all
	git commit -a -m '[dist] Regenerated handbook'

# Push code changes to github and nodejitsu
publish: regenerate
	git push origin master
	if [ "nodejitsu" != $(jitsu whoami) ]; then
	  jitsu login --username nodejitsu
	fi
	jitsu deploy

clean:
	rm -f book.*
	rm -f chapters/*.html
	rm -f appendices/*.html
	rm -f pages/index.html
	rm -f pages/title.html
	rm -rf public

clear:
	rm -f chapters/*.html
	rm -f appendices/*.html
	rm -f pages/index.html
	rm -f pages/title.html

# TODO: Fall back to evince
view: book.pdf
	open book.pdf || evince book.pdf

serve: website
	@echo "\n... serving website!"
	node ./bin/server

# TODO: Do I need this? Unsure.
.PHONY: view clean regenerate
